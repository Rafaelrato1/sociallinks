{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RafaelExtension\\\\sociallinks\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Prismic from 'prismic-javascript';\n\nconst Index = ({\n  data\n}) => {\n  console.log(\"client\");\n  return __jsx(\"div\", {\n    style: {\n      backgroundColor: data.corfundo,\n      color: data.cortexto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"SocialLinks (Central de Links)\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, data.body.map(item => {\n    if (item.slice_type === 'secao') {\n      return __jsx(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }\n      }, JSON.stringify(item));\n    }\n\n    if (item.slice_type === 'link') {\n      return __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        href: item.primary.destino.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, item.primary.texto_do_botao));\n    }\n\n    return null;\n  })), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, JSON.stringify(data, null, 2)));\n};\n\nexport async function getServerSideProps() {\n  console.log(\"server\");\n  const client = Prismic.client('https://rafaelteixeira.cdn.prismic.io/api/v2');\n  const centralLinks = await client.getSingle(\"centrallinks\");\n  console.log(centralLinks);\n  return {\n    props: {\n      data: centralLinks.data\n    }\n  };\n}\nexport default Index;","map":{"version":3,"sources":["C:/Users/RafaelExtension/sociallinks/pages/index.js"],"names":["React","Prismic","Index","data","console","log","backgroundColor","corfundo","color","cortexto","body","map","item","slice_type","JSON","stringify","primary","destino","url","texto_do_botao","getServerSideProps","client","centralLinks","getSingle","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,SACA;AACE,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAEH,IAAI,CAACI,QADnB;AAEHC,MAAAA,KAAK,EAAEL,IAAI,CAACM;AAFT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AACrB,QAAIA,IAAI,CAACC,UAAL,KAAoB,OAAxB,EAAgC;AAC9B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAN,CAAP;AACD;;AACD,QAAIA,IAAI,CAACC,UAAL,KAAoB,MAAxB,EAA+B;AAC/B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAED,IAAI,CAACI,OAAL,CAAaC,OAAb,CAAqBC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCN,IAAI,CAACI,OAAL,CAAaG,cAAjD,CADF,CADF;AAKC;;AACD,WAAO,IAAP;AACD,GAZA,CADH,CAPJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,IAAI,CAACC,SAAL,CAAeZ,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAtBJ,CADA;AA0BD,CA5BD;;AA8BA,OAAO,eAAeiB,kBAAf,GAAoC;AACzChB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMgB,MAAM,GAAGpB,OAAO,CAACoB,MAAR,CAAe,8CAAf,CAAf;AACA,QAAMC,YAAY,GAAG,MAAMD,MAAM,CAACE,SAAP,CAAiB,cAAjB,CAA3B;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,YAAZ;AACA,SAAO;AAAEE,IAAAA,KAAK,EAAE;AACdrB,MAAAA,IAAI,EAAEmB,YAAY,CAACnB;AADL;AAAT,GAAP;AAGD;AAED,eAAeD,KAAf","sourcesContent":["import React from 'react';\r\nimport Prismic from 'prismic-javascript';\r\n\r\nconst Index = ({ data }) => {\r\n  console.log(\"client\");\r\n  return (\r\n  <div \r\n    style={{ \r\n        backgroundColor: data.corfundo,\r\n        color: data.cortexto\r\n      }}\r\n    >\r\n      <h1>SocialLinks (Central de Links)</h1>\r\n      <ul>\r\n        {data.body.map(item => {\r\n          if (item.slice_type === 'secao'){\r\n            return <pre>{JSON.stringify(item)}</pre>;\r\n          }\r\n          if (item.slice_type === 'link'){\r\n          return (\r\n            <li>\r\n              <a href={item.primary.destino.url}>{item.primary.texto_do_botao}</a>\r\n            </li>\r\n          );\r\n          }\r\n          return null;\r\n        })}\r\n      </ul>\r\n      <pre>{JSON.stringify(data, null, 2)}</pre>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps() {\r\n  console.log(\"server\");\r\n  const client = Prismic.client('https://rafaelteixeira.cdn.prismic.io/api/v2');\r\n  const centralLinks = await client.getSingle(\"centrallinks\");\r\n  console.log(centralLinks);\r\n  return { props: {\r\n    data: centralLinks.data,\r\n  } };\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}